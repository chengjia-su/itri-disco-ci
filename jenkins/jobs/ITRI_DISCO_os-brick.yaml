- job-template:
    name: 'ITRI_DISCO_os-brick'
    node: '{node}'

    wrappers:
      - timeout:
          timeout: 240
          fail: true
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
            #!/bin/bash -xe

            function pre_test_hook {
                echo "Install thirdparty client libraries"
                [ -e /home/jenkins/.ccache ] && sudo chown -R jenkins:jenkins /home/jenkins/.ccache
                #TODO: update your client here if needed, otherwise delete
                # sudo -H pip install mydriverclient
                echo "Configure the local.conf file to properly setup hp lefthand driver in cinder.conf"
                cat <<EOF >$BASE/new/devstack/local.conf
            [[post-config|\$CINDER_CONF]]
            [DEFAULT]
            enabled_backends=disco
            default_volume_type=disco
            rest_ip=10.203.126.7
            choice_client=soap

            [disco]
            # add you driver configuration here
            volume_driver=cinder.volume.drivers.disco.disco.DiscoDriver
            volume_backend_name=disco
            disco_wsdl_path=/usr/cloudos/dms/conf/DISCOService.wsdl

            # Use post-extra because the tempest configuration file is
            # overwritten with the .sample after post-config.
            [[test-config|\$TEMPEST_CONFIG]]
            [compute]
            build_timeout=300

            [volume]
            storage_protocol=disco
            vendor_name=ITRI
            backend_names=disco
            build_timeout=300

            [compute-feature-enabled]
            swap_volume=False

            [volume-feature-enabled]
            backup=False
            manage_snapshot=False
            EOF

            #     echo "Configure localrc file to properly setup CINDER_ENABLED_BACKENDS"
            #     cat <<EOF >>$BASE/new/devstack/localrc
            # CINDER_ENABLED_BACKENDS=disco:disco
            # LIBS_FROM_GIT=os-brick
            # FORCE=yes
            # MYSQL_PASSWORD=secretmysql
            # DATABASE_PASSWORD=secretdatabase
            # RABBIT_PASSWORD=secretrabbit
            # ADMIN_PASSWORD=secretadmin
            # SERVICE_PASSWORD=secretservice
            # EOF

                echo "Configure DISCO domain name"
                sudo chmod 777 /etc/hosts
                sudo cat <<EOF >>/etc/hosts

            10.203.126.20 dms.ccma.itri dms
            10.203.126.21 dss.ccma.itri dss
            EOF
                sudo chmod 744 /etc/hosts

                sudo touch /root/.pydistutils.cfg
                sudo cat <<EOF >/root/.pydistutils.cfg
            [easy_install]
            index_url =  http://pypi.python.org/pypi/simple
            EOF

                sudo cat <<EOF >/home/jenkins/.pydistutils.cfg
            [easy_install]
            index_url =  http://pypi.python.org/pypi/simple
            EOF
                echo "Add disco client code"
                sudo iptables -I openstack-INPUT 1 -p tcp -m multiport --ports 9898 -m comment --comment "9898 for DISCO agent" -j ACCEPT
                sudo apt-get install -y ant build-essential debhelper fakeroot linux-headers-$(uname -r) bc > /dev/null 2>&1
                sudo wget -P /tmp http://10.206.11.7/cinder-ci/dms-src.tgz > /dev/null 2>&1
                sudo tar -zxvf /tmp/dms-src.tgz -C /tmp > /dev/null 2>&1
                
                cd /tmp/dms/
                sudo ant packages.deb.client -Dversion=1.0.0 -Drelease=1 > /dev/null 2>&1
                sudo dpkg -i packages/compute_node/dms-clientnode_1.0.0-1_amd64.deb > /dev/null 2>&1
                sudo cp DISCOService.wsdl /usr/cloudos/dms/conf/
                cd -
                sudo /etc/init.d/dms_clientnode start > /dev/null 2>&1
                sleep 5
                sudo /etc/init.d/dms_clientnode status

            }

            export -f pre_test_hook

            # To keep our CINDER_ENABLED_BACKENDS configuration in localrc
            export KEEP_LOCALRC=true
            export LIBS_FROM_GIT=os-brick
            export PYTHONUNBUFFERED=true
            # Configure localrc file to properly setup CINDER_ENABLED_BACKENDS
            DEVSTACK_LOCAL_CONFIG+=$'\n'"FORCE=yes"
            DEVSTACK_LOCAL_CONFIG+=$'\n'"CINDER_ENABLED_BACKENDS=disco:disco"
            DEVSTACK_LOCAL_CONFIG+=$'\n'"LIBS_FROM_GIT=os-brick"
            export DEVSTACK_LOCAL_CONFIG

            # export DEVSTACK_GATE_TIMEOUT=220
            export DEVSTACK_GATE_TEMPEST=1
            export BUILD_TIMEOUT=14400000
            export DEVSTACK_GATE_TIMEOUT_BUFFER=20

            export DEVSTACK_GATE_TEMPEST_REGEX="volume"
            # Let's use the http protocol instead of git protocol
            export GIT_BASE=https://git.openstack.org

            if [ -z $ZUUL_PROJECT ]; then
                export ZUUL_PROJECT=openstack-dev/ci-sandbox
            fi
            if [ -z $ZUUL_BRANCH ]; then
                export ZUUL_BRANCH=master
            fi
            export ZUUL_URL="http://10.211.127.20/p/"

            sudo pip install -U os-testr
            sudo apt-get install -y bridge-utils ebtables > /dev/null 2>&1

            cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
            ./safe-devstack-vm-gate-wrap.sh


    publishers:
      - devstack-logs
      - console-log
