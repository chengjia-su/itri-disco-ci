- job-template:
    name: 'dsvm-tempest-my-cinder-driver'
    node: '{node}'

    wrappers:
      - timeout:
          timeout: 125
          fail: true
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe

          function pre_test_hook {{
              echo "Install thirdparty client libraries"
              #TODO: update your client here if needed, otherwise delete
              # sudo -H pip install mydriverclient
              echo "Configure the local.conf file to properly setup hp lefthand driver in cinder.conf"
              cat <<EOF >$BASE/new/devstack/local.conf

           
#           CINDER_REPO = https://review.openstack.org/openstack/cinder
#           CINDER_BRANCH = refs/changes/56/253356/8


          [[post-config|\$CINDER_CONF]]
          [DEFAULT]
          enabled_backends=disco
          default_volume_type=disco

          [disco]
          # add you driver configuration here
          volume_driver=cinder.volume.drivers.disco.disco.DiscoDriver
          volume_backend_name=disco
          disco_wsdl_path=/usr/cloudos/dms/conf/DISCOService.wsdl

          # Use post-extra because the tempest configuration file is
          # overwritten with the .sample after post-config.
          [[post-extra|\$TEMPEST_CONFIG]]
          [volume]
          storage_protocol=disco
          vendor_name=ITRI
          backend1_name=disco
          EOF

              echo "Configure localrc file to properly setup CINDER_ENABLED_BACKENDS"
              cat <<EOF >>$BASE/new/devstack/localrc
          CINDER_ENABLED_BACKENDS=disco:disco
          EOF

              echo "Configure DISCO domain name"
              sudo cat <<EOF >>/etc/hosts

          10.211.12.12 dms.ccma.itri dms
          10.211.12.13 dss.ccma.itri dss
          EOF

              echo "Add disco client code"
              sudo wget -P /etc/init.d/ http://10.211.12.1:/dms_clientnode
              sudo mkdir -p /usr/cloudos/
              sudo wget -P /usr/cloudos/ http://10.211.12.1:/dms.tar.gz
              sudo sudo tar -zxvf /usr/cloudos/dms.tar.gz --directory /usr/cloudos/
 

              echo "Cherry-picking latest driver from gerrit"
              cd $BASE/new/cinder
          
              # fetch latest patchset from gerrit
              UPSTREAM_REMOTE=https://review.openstack.org/openstack/cinder
          
              # set this to your gerrit change number
              CHANGE_NUM=253356
          
              PATCHSET_BASE=refs/changes/${CHANGE_NUM:(-2)}/$CHANGE_NUM
              LATEST_PATCHSET=$(git ls-remote $UPSTREAM_REMOTE $PATCHSET_BASE/\* |
                                sort -t/ -k 5 -n | tail -n1 | cut -d$'\t' -f2)
          
              if [ -z "$LATEST_PATCHSET" ]; then
                  echo "Failed to determine latest patchset of $PATCHSET_BASE from $UPSTREAM_REMOTE"
                  exit 1
              fi
          
              echo "Latest patchset ref is $LATEST_PATCHSET"
                        
              git fetch $UPSTREAM_REMOTE $LATEST_PATCHSET && git cherry-pick FETCH_HEAD

          }}

          export -f pre_test_hook

          # To keep our CINDER_ENABLED_BACKENDS configuration in localrc
          export KEEP_LOCALRC=true

          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=120
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_TEMPEST_REGEX="volume"

          # Let's use the http protocol instead of git protocol
          export GIT_BASE=https://git.openstack.org

          if [ -z $ZUUL_PROJECT ]; then
              export ZUUL_PROJECT=openstack-dev/ci-sandbox
          fi
          if [ -z $ZUUL_BRANCH ]; then
              export ZUUL_BRANCH=master
          fi

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log
